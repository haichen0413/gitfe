(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{366:function(t,a,s){"use strict";s.r(a);var e=s(40),n=Object(e.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"ansi-regex"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ansi-regex","aria-hidden":"true"}},[t._v("#")]),t._v(" ansi-regex "),s("a",{attrs:{href:"https://travis-ci.org/chalk/ansi-regex",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://travis-ci.org/chalk/ansi-regex.svg?branch=master",alt:"Build Status"}}),s("OutboundLink")],1)]),t._v(" "),s("blockquote",[s("p",[t._v("Regular expression for matching "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/ANSI_escape_code",target:"_blank",rel:"noopener noreferrer"}},[t._v("ANSI escape codes"),s("OutboundLink")],1)])]),t._v(" "),s("hr"),t._v(" "),s("div",{attrs:{align:"center"}},[s("b",[s("a",{attrs:{href:"https://tidelift.com/subscription/pkg/npm-ansi-regex?utm_source=npm-ansi-regex&utm_medium=referral&utm_campaign=readme"}},[t._v("Get professional support for this package with a Tidelift subscription")])]),t._v(" "),s("br"),t._v(" "),s("sub",[t._v("\n\t\tTidelift helps make open source sustainable for maintainers while giving companies"),s("br"),t._v("assurances about security, maintenance, and licensing for their dependencies.\n\t")])]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"install"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install","aria-hidden":"true"}},[t._v("#")]),t._v(" Install")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ npm install ansi-regex\n")])])]),s("h2",{attrs:{id:"usage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usage","aria-hidden":"true"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ansiRegex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ansi-regex'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ansiRegex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\u001B[4mcake\\u001B[0m'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ansiRegex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cake'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> false")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\u001B[4mcake\\u001B[0m'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ansiRegex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> ['\\u001B[4m', '\\u001B[0m']")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\u001B[4mcake\\u001B[0m'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ansiRegex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("onlyFirst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> ['\\u001B[4m']")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\u001B]8;;https://github.com\\u0007click\\u001B]8;;\\u0007'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ansiRegex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> ['\\u001B]8;;https://github.com\\u0007', '\\u001B]8;;\\u0007']")]),t._v("\n")])])]),s("h2",{attrs:{id:"api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api","aria-hidden":"true"}},[t._v("#")]),t._v(" API")]),t._v(" "),s("h3",{attrs:{id:"ansiregex-options"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ansiregex-options","aria-hidden":"true"}},[t._v("#")]),t._v(" ansiRegex([options])")]),t._v(" "),s("p",[t._v("Returns a regex for matching ANSI escape codes.")]),t._v(" "),s("h4",{attrs:{id:"options"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options","aria-hidden":"true"}},[t._v("#")]),t._v(" options")]),t._v(" "),s("h5",{attrs:{id:"onlyfirst"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#onlyfirst","aria-hidden":"true"}},[t._v("#")]),t._v(" onlyFirst")]),t._v(" "),s("p",[t._v("Type: "),s("code",[t._v("boolean")]),s("br"),t._v("\nDefault: "),s("code",[t._v("false")]),t._v(" "),s("em",[t._v("(Matches any ANSI escape codes in a string)")])]),t._v(" "),s("p",[t._v("Match only the first ANSI escape.")]),t._v(" "),s("h2",{attrs:{id:"faq"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#faq","aria-hidden":"true"}},[t._v("#")]),t._v(" FAQ")]),t._v(" "),s("h3",{attrs:{id:"why-do-you-test-for-codes-not-in-the-ecma-48-standard"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#why-do-you-test-for-codes-not-in-the-ecma-48-standard","aria-hidden":"true"}},[t._v("#")]),t._v(" Why do you test for codes not in the ECMA 48 standard?")]),t._v(" "),s("p",[t._v("Some of the codes we run as a test are codes that we acquired finding various lists of non-standard or manufacturer specific codes. We test for both standard and non-standard codes, as most of them follow the same or similar format and can be safely matched in strings without the risk of removing actual string content. There are a few non-standard control codes that do not follow the traditional format (i.e. they end in numbers) thus forcing us to exclude them from the test because we cannot reliably match them.")]),t._v(" "),s("p",[t._v("On the historical side, those ECMA standards were established in the early 90's whereas the VT100, for example, was designed in the mid/late 70's. At that point in time, control codes were still pretty ungoverned and engineers used them for a multitude of things, namely to activate hardware ports that may have been proprietary. Somewhere else you see a similar 'anarchy' of codes is in the x86 architecture for processors; there are a ton of \"interrupts\" that can mean different things on certain brands of processors, most of which have been phased out.")]),t._v(" "),s("h2",{attrs:{id:"security"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#security","aria-hidden":"true"}},[t._v("#")]),t._v(" Security")]),t._v(" "),s("p",[t._v("To report a security vulnerability, please use the "),s("a",{attrs:{href:"https://tidelift.com/security",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tidelift security contact"),s("OutboundLink")],1),t._v(". Tidelift will coordinate the fix and disclosure.")]),t._v(" "),s("h2",{attrs:{id:"maintainers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#maintainers","aria-hidden":"true"}},[t._v("#")]),t._v(" Maintainers")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/sindresorhus",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sindre Sorhus"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/qix-",target:"_blank",rel:"noopener noreferrer"}},[t._v("Josh Junon"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"license"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#license","aria-hidden":"true"}},[t._v("#")]),t._v(" License")]),t._v(" "),s("p",[t._v("MIT")])])},[],!1,null,null,null);a.default=n.exports}}]);